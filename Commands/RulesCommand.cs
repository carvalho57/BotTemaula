
using System;
using System.Threading;
using System.Threading.Tasks;
using Hangfire;
using Telegram.Bot;
using Telegram.Bot.Types;
using Telegram.Bot.Types.Enums;
using temAulaBotTelegram.Services;

namespace temAulaBotTelegram.Commands
{
    public class RulesCommand : Command
    {
        private const int TimeToDeletemessage = 30;
        private const string RulesMessage = "Bem vindo ao grupo do TEM AULA!\n\nAntes de mais nada #vamosprogramar! ðŸ’»\n\n O objetivo deste grupo Ã© para que alunos que participam dos cursos Tem Aula promovidos pelo @professorisidro no Youtube e em seu site possam discutir e compartilhar dÃºvidas referentes aos mais diversos exercÃ­cios de programaÃ§Ã£o.\n\nAlgumas observaÃ§Ãµes:\n\nâœ… Este Ã© um ambiente colaborativo, portanto seja razoÃ¡vel\nâœ… NÃ£o permitiremos envio de assuntos que possam gerar SPAM\nâœ… NÃ£o permitiremos conteÃºdo ofensivo ou pornogrÃ¡fico\nâœ… NÃ£o permitiremos ofensas a membros de qualquer natureza (lembrem-se: estamos aqui para ESTUDAR) \nâœ… Evite Ã¡udios ou vÃ­deos para pedir dÃºvidas\nâœ… Fica mais fÃ¡cil ajudar se vc compartilhar seu cÃ³digo via Github, gist ou pastebin (ao invÃ©s de tirar foto do monitor)\n\nE uma coisa muito importante:\n\n*Aqui nÃ£o Ã© repositÃ³rio de profissionais para que outros resolvam seus exercÃ­cios de aula (ou trabalho). Aqui Ã© para que cada um aprenda com os demais.*.";
        public RulesCommand(TelegramBotClient telegramClient) : base(telegramClient)
        {
            Name = "/regras";
        }

        public async override Task Execute(Message message)
        {
            var messageResult = await TelegramClient.SendTextMessageAsync(
                    chatId: message.Chat.Id,
                    text: RulesMessage,
                    parseMode: ParseMode.Markdown
                );

            BackgroundJob.Schedule(
                () => TelegramClient.DeleteMessageAsync(messageResult.Chat.Id, messageResult.MessageId, default(CancellationToken)),
                TimeSpan.FromSeconds(TimeToDeletemessage)
            );
        }
    }
}